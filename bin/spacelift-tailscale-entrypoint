#!/bin/bash
#
# Automated entrypoint for spacelift-tailscale
# Automatically manages Tailscale lifecycle without requiring manual hooks
#

[[ "$TRACE" ]] && set -o xtrace
set -o errexit
set -o nounset
set -o pipefail

# Consistent logging to match spacetail script style
log() {
    echo "spacetail: $1"
}

log_success() {
    echo "spacetail: $1"
}

log_warning() {
    echo "spacetail: $1"
}

log_error() {
    echo "spacetail: $1"
}

# Check if Tailscale should be enabled
should_enable_tailscale() {
    # Enable if we have authentication credentials
    if [[ -n ${TS_AUTH_KEY:-} ]] || [[ -n ${TS_OAUTH_CLIENT_ID:-} && -n ${TS_OAUTH_CLIENT_SECRET:-} ]]; then
        return 0
    fi
    return 1
}

# Start Tailscale automatically
start_tailscale() {
    # Start Tailscale first (without proxy set)
    if spacetail up; then
        # Now set HTTP proxy environment variables for Terraform providers
        export HTTP_PROXY=http://127.0.0.1:8080
        export HTTPS_PROXY=http://127.0.0.1:8080

        # Set up cleanup trap
        trap 'spacetail down' EXIT

        return 0
    else
        log_error "Failed to start Tailscale"
        return 1
    fi
}

# Main entrypoint logic
main() {
    # Check if manual mode is enabled
    if [[ ${SPACELIFT_TAILSCALE_MANUAL:-} == "true" ]]; then
        log "Manual mode enabled - use spacetail up/down commands in your hooks"
        exec "$@"
        return
    fi

    if should_enable_tailscale; then
        # Check if TF_VAR_spacelift_workspace_root is set (required by spacetail)
        if [[ -z ${TF_VAR_spacelift_workspace_root:-} ]]; then
            export TF_VAR_spacelift_workspace_root="/mnt/workspace"
        fi

        # Start Tailscale
        if ! start_tailscale; then
            log_error "Tailscale startup failed - continuing without VPN"
        fi
    fi

    # Run the command and capture its exit code
    "$@"
    local exit_code=$?

    # The trap will handle cleanup automatically when this script exits
    exit $exit_code
}

# Run main function with all arguments
main "$@"
